#include <iostream>
using namespace std;


#define A_CUSTOM_COUNT 			1
#define ADDRESS_BLOCK_CASE_N	2
#define ADDRESS_BLOCK_CASE_H	ADDRESS_BLOCK_CASE_N+1
#define CASE_SIZE				40
#define ADDRESS_BLOCK_CASE_L	ADDRESS_BLOCK_CASE_H+CASE_SIZE
#define ADDRESS_BLOCK_CASE_V	ADDRESS_BLOCK_CASE_L+CASE_SIZE

#define MAP_SIZE					100
#define ADDRESS_BLOCK_MAP_CASE_H	ADDRESS_BLOCK_CASE_V+CASE_SIZE
#define ADDRESS_BLOCK_MAP_CASE_L	ADDRESS_BLOCK_MAP_CASE_H+MAP_SIZE
//~ #define ADDRESS_BLOCK_MAP_CASE_A	ADDRESS_BLOCK_MAP_CASE_L+MAP_SIZE
#define ADDRESS_BLOCK_MAP_ACT_SPEED ADDRESS_BLOCK_MAP_CASE_L+MAP_SIZE
#define ADDRESS_BLOCK_MAP_ACT_KP	ADDRESS_BLOCK_MAP_ACT_SPEED+MAP_SIZE
#define ADDRESS_BLOCK_MAP_ACT_KD	ADDRESS_BLOCK_MAP_ACT_KP+MAP_SIZE
#define ADDRESS_BLOCK_MAP_ACT_TURN_CASE_A_UNTIL_A	ADDRESS_BLOCK_MAP_ACT_KD+MAP_SIZE 		//BIT CONFIG  [CASE_A][CASE_A][CASE_A][UNTIL_A][UNTIL_A][UNTIL_A][TURN][TURN]
#define ADDRESS_BLOCK_MAP_UNTIL_H	ADDRESS_BLOCK_MAP_ACT_TURN_CASE_A_UNTIL_A+MAP_SIZE
#define ADDRESS_BLOCK_MAP_UNTIL_L	ADDRESS_BLOCK_MAP_UNTIL_H+MAP_SIZE
//~ #define ADDRESS_BLOCK_MAP_UNTIL_A	ADDRESS_BLOCK_MAP_UNTIL_L+MAP_SIZE
int main(void)
{
	cout<<ADDRESS_BLOCK_MAP_UNTIL_L+MAP_SIZE<<"\n";
	
	cout<<((324/10));
}
